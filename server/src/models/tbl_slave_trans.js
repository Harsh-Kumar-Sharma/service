const { TBL_SLAVE_TRANS } = require('../config/tables');

module.exports = (sequelize, DataTypes) => {
  return sequelize.define(
    TBL_SLAVE_TRANS,
    {
      PLAZA_CODE: { type: DataTypes.STRING, allowNull: false },
      LANE_TRANS_ID: { type: DataTypes.STRING, allowNull: false },
      API_TRANS_ID: { type: DataTypes.STRING },
      LANE_ID: { type: DataTypes.STRING, allowNull: false },
      LANE_TYPE: { type: DataTypes.STRING },
      OPERATOR_ID: { type: DataTypes.STRING },
      DIRECTION: { type: DataTypes.STRING },
      SHIFT_CODE: { type: DataTypes.STRING },
      PASSAGE_TIME: { type: DataTypes.DATE },
      TAG: { type: DataTypes.STRING },
      TAG_TID: { type: DataTypes.STRING },
      PAN: { type: DataTypes.STRING },
      TAG_PLATE: { type: DataTypes.STRING },
      VEH_PLATE: { type: DataTypes.STRING },
      TAG_CLASS: { type: DataTypes.INTEGER },
      VEH_CLASS: { type: DataTypes.INTEGER },
      AVC_CLASS: { type: DataTypes.INTEGER },
      WEIGHT: { type: DataTypes.STRING },
      PAYMENT_TYPE: { type: DataTypes.STRING },
      PAYMENT_SUBTYPE: { type: DataTypes.STRING },
      CLASS_FARE: { type: DataTypes.INTEGER },
      PENALTY_FARE: { type: DataTypes.INTEGER },
      OW_FARE: { type: DataTypes.INTEGER },
      TOTAL_FARE: { type: DataTypes.INTEGER },
      OPERATOR_COMMENT: { type: DataTypes.STRING },
      ABNORMALITY: { type: DataTypes.STRING },
      VEH_IMG_OCR: { type: DataTypes.STRING },
      PLATE_IMG_OCR: { type: DataTypes.STRING },
      REVIEWER_ID: { type: DataTypes.STRING },
      RE_VEH_PLATE: { type: DataTypes.STRING },
      RE_VEH_CLASS: { type: DataTypes.INTEGER },
      RE_VEH_FEE: { type: DataTypes.DECIMAL(4, 0) },
      RE_TIME: { type: DataTypes.DATE },
      RE_PAYMENT_TYPE: { type: DataTypes.STRING },
      RE_PAYMENT_SUBTYPE: { type: DataTypes.STRING },
      RE_COMMENT: { type: DataTypes.STRING },
      RE_STATUS: { type: DataTypes.BOOLEAN },
      CASHIER_ID: { type: DataTypes.STRING },
      CS_COMMENT: { type: DataTypes.STRING },
      CS_REVIEW_TIME: { type: DataTypes.DATE },
      MODE: { type: DataTypes.STRING },
      BLACKLIST: { type: DataTypes.BOOLEAN },
      IS_SAME_DIR: { type: DataTypes.BOOLEAN },
      PRO_STATUS: { type: DataTypes.BOOLEAN },
      CATEGORY: { type: DataTypes.STRING },
      ENCODED_DATE: { type: DataTypes.DATE },
      TAG_DETAILS_STATUS: { type: DataTypes.BOOLEAN },
      API_TRANS_STATUS: { type: DataTypes.BOOLEAN },
      VALID_ID: { type: DataTypes.INTEGER, allowNull: false, primaryKey: true, autoIncrement: true },
      OW_DISPUTED: { type: DataTypes.BOOLEAN },
      IS_SYNCED: { type: DataTypes.BOOLEAN },
      SYNC_STATUS: { type: DataTypes.STRING },
      MERGE_STATUS: { type: DataTypes.BOOLEAN },
      IS_DUPLICATE: { type: DataTypes.BOOLEAN },
    },
    {
      sequelize,
      timestamps: false,
      freezeTableName: true,
    }
  );
};
